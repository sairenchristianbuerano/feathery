{"version":3,"sources":["../../src/array-species-create.js"],"names":["arraySpeciesCreate","originalArray","length","isArray","Array","C","Object","getPrototypeOf","constructor","Symbol","species","toString","undefined","TypeError","result"],"mappings":";;;;;;;;kBAMwBA,kB;AANxB;;;;;;AAMe,SAASA,kBAAT,CAA4BC,aAA5B,EAA2CC,MAA3C,EAAmD;AAChE,MAAMC,UAAUC,MAAMD,OAAN,CAAcF,aAAd,CAAhB;AACA,MAAI,CAACE,OAAL,EAAc;AACZ,WAAOC,MAAMF,MAAN,CAAP;AACD;AACD;;;AAGA,MAAIG,IAAIC,OAAOC,cAAP,CAAsBN,aAAtB,EAAqCO,WAA7C;AACA,MAAIH,CAAJ,EAAO;AAAE;AACP,QAAI,QAAOA,CAAP,yCAAOA,CAAP,OAAa,QAAb,IAAyB,OAAOA,CAAP,KAAa,UAA1C,EAAsD;AACpDA,UAAIA,EAAEI,OAAOC,OAAP,CAAeC,QAAf,EAAF,CAAJ;AACAN,UAAIA,MAAM,IAAN,GAAaA,CAAb,GAAiBO,SAArB;AACD;AACD,QAAIP,MAAMO,SAAV,EAAqB;AACnB,aAAOR,MAAMF,MAAN,CAAP;AACD;AACD,QAAI,OAAOG,CAAP,KAAa,UAAjB,EAA6B;AAC3B,YAAMQ,UAAU,qBAAV,CAAN;AACD;AACD;AACA,QAAMC,SAAS,IAAIT,CAAJ,CAAMH,MAAN,CAAf;AACA,WAAOY,MAAP;AACD;AACF","file":"array-species-create.js","sourcesContent":["/**\r\n * @template T\r\n * @param {T[]} originalArray\r\n * @param {number} length\r\n * @returns {T[]}\r\n */\r\nexport default function arraySpeciesCreate(originalArray, length) {\r\n  const isArray = Array.isArray(originalArray);\r\n  if (!isArray) {\r\n    return Array(length);\r\n  }\r\n  /**\r\n   * @type {ArrayConstructor|undefined|null} C\r\n   */\r\n  let C = Object.getPrototypeOf(originalArray).constructor;\r\n  if (C) { // If IsConstructor(C) is true... not sure how this can be reliably checked without invoking it. Likely not insignificant.\r\n    if (typeof C === 'object' || typeof C === 'function') {\r\n      C = C[Symbol.species.toString()];\r\n      C = C !== null ? C : undefined;\r\n    }\r\n    if (C === undefined) {\r\n      return Array(length);\r\n    }\r\n    if (typeof C !== 'function') {\r\n      throw TypeError('invalid constructor');\r\n    }\r\n    /** @type {Array} */\r\n    const result = new C(length);\r\n    return result;\r\n  }\r\n}\r\n"]}