{"version":3,"sources":["../../src/flatten.js"],"names":["Object","prototype","hasOwnProperty","call","Array","flatten","depth","o","a","length","depthNum","undefined","Number","Infinity","filter","e"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,IAAI,CAACA,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCC,MAAMH,SAA3C,EAAsD,SAAtD,CAAL,EAAuE;;AAErE;;;AAGAG,QAAMH,SAAN,CAAgBI,OAAhB,GAA0B,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AAChD,QAAMC,IAAIP,OAAO,IAAP,CAAV;AACA,QAAMQ,IAAI,kCAAmBD,CAAnB,EAAsB,KAAKE,MAA3B,CAAV;AACA,QAAMC,WAAWJ,UAAUK,SAAV,GAAsBC,OAAON,KAAP,CAAtB,GAAsCO,QAAvD;AACA,oCAAiBL,CAAjB,EAAoBD,CAApB,EAAuB,CAAvB,EAA0BG,QAA1B;AACA,WAAOF,EAAEM,MAAF,CAAS;AAAA,aAAKC,MAAMJ,SAAX;AAAA,KAAT,CAAP;AACD,GAND;AAOD","file":"flatten.js","sourcesContent":["import arraySpeciesCreate from './array-species-create';\r\nimport flattenIntoArray from './flatten-into-array';\r\n\r\nif (!Object.prototype.hasOwnProperty.call(Array.prototype, 'flatten')) {\r\n\r\n  /**\r\n   * @param {number=Infinity} depth\r\n   */\r\n  Array.prototype.flatten = function flatten(depth) {\r\n    const o = Object(this);\r\n    const a = arraySpeciesCreate(o, this.length);\r\n    const depthNum = depth !== undefined ? Number(depth) : Infinity;\r\n    flattenIntoArray(a, o, 0, depthNum);\r\n    return a.filter(e => e !== undefined);\r\n  };\r\n}\r\n"]}