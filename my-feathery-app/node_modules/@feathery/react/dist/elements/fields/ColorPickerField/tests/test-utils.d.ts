/// <reference types="jest" />
import { mockResponsiveStyles, setMockFieldValue, getMockFieldValue, resetMockFieldValue } from '../../shared/tests/field-test-utils';
export { mockResponsiveStyles, setMockFieldValue, getMockFieldValue, resetMockFieldValue };
export declare const createColorPickerElement: (type?: string, metadata?: any, properties?: any, styles?: any) => {
    id: string;
    servar: any;
    properties: any;
    styles: any;
    repeat: boolean;
};
export declare const createColorPickerProps: (element: any, customProps?: any) => any;
export declare const createStatefulOnChange: () => jest.Mock<void, [value: string]>;
export declare const getColorDisplay: () => Promise<HTMLElement>;
export declare const getColorPickerOverlay: () => HTMLElement;
export declare const getColorPickerInput: () => HTMLInputElement;
export declare const clickColorDisplay: () => Promise<void>;
export declare const changeColor: (hexColor: string) => void;
export declare const isPickerVisible: () => boolean;
export declare const isColorDisplayDisabled: () => Promise<boolean>;
export declare const expectColorValue: (expectedValue: string) => void;
export declare const getDisplayedColor: () => Promise<string>;
//# sourceMappingURL=test-utils.d.ts.map