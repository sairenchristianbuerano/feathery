/// <reference types="jest" />
import { setMockFieldValue, getMockFieldValue, resetMockFieldValue, expectFieldToBeDisabled, expectFieldToBeRequired, expectFieldToHaveAriaLabel } from '../../shared/tests/field-test-utils';
export { setMockFieldValue, getMockFieldValue, resetMockFieldValue, expectFieldToBeDisabled, expectFieldToBeRequired, expectFieldToHaveAriaLabel };
export declare const createButtonGroupElement: (type?: string, metadata?: any, styles?: any) => {
    id: string;
    servar: any;
    properties: any;
    styles: any;
    repeat: boolean;
};
export declare const createButtonGroupProps: (element: any, customProps?: any) => any;
export declare const createStatefulOnClick: () => jest.Mock<void, [value: string]>;
export declare const createOptionsMetadata: (options: string[], labels?: string[], tooltips?: string[], images?: string[]) => {
    option_images?: string[] | undefined;
    option_tooltips?: string[] | undefined;
    option_labels?: string[] | undefined;
    options: string[];
};
export declare const createRepeatOptionsMetadata: (repeatOptions: any[]) => {
    repeat_options: any[][];
};
export declare const createImageButtonGroupElement: (options?: string[], images?: string[]) => {
    id: string;
    servar: any;
    properties: any;
    styles: any;
    repeat: boolean;
};
export declare const getButtonElements: () => HTMLElement[];
export declare const getButtonElement: (index: number) => HTMLElement;
export declare const getButtonByValue: (value: string) => HTMLElement | undefined;
export declare const getButtonLabels: () => string[];
export declare const getButtonLabel: (index: number) => string;
export declare const getButtonImage: (index: number) => HTMLImageElement;
export declare const getButtonTooltip: (label: string) => string;
export declare const getErrorInput: () => HTMLInputElement;
export declare const expectButtonToBeSelected: (value: string) => void;
export declare const expectButtonToBeUnselected: (value: string) => void;
export declare const expectButtonGroupToHaveValues: (values: string[]) => void;
export declare const expectButtonGroupToHaveButtonCount: (count: number) => void;
export declare const expectButtonToHaveImage: (index: number, imageSrc: string) => void;
export declare const expectButtonToHaveNoImage: (index: number) => void;
export declare const expectButtonToHaveTooltip: (label: string, tooltip: string) => void;
export declare const expectButtonGroupToBeDisabled: () => void;
export declare const expectButtonGroupToBeEnabled: () => void;
export declare const expectErrorInputToHaveAttributes: (expectedId: string, expectedName: string, expectedAriaLabel: string) => void;
//# sourceMappingURL=test-utils.d.ts.map