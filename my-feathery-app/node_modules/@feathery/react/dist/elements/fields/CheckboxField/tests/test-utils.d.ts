/// <reference types="jest" />
import React from 'react';
import { mockResponsiveStyles, setMockFieldValue, getMockFieldValue, resetMockFieldValue, expectFieldToBeDisabled, expectFieldToBeRequired, expectFieldToHaveAriaLabel } from '../../shared/tests/field-test-utils';
export { mockResponsiveStyles, setMockFieldValue, getMockFieldValue, resetMockFieldValue, expectFieldToBeDisabled, expectFieldToBeRequired, expectFieldToHaveAriaLabel };
export declare const createCheckboxElement: (type?: string, metadata?: any, styles?: any) => {
    id: string;
    servar: any;
    properties: any;
    styles: any;
    repeat: boolean;
};
export declare const createCheckboxProps: (element: any, customProps?: any) => any;
export declare const createStatefulOnChange: () => jest.Mock<void, [e: React.ChangeEvent<HTMLInputElement>]>;
export declare const getCheckboxElement: () => HTMLInputElement;
export declare const getCheckboxContainer: () => HTMLElement;
export declare const expectCheckboxToBeChecked: (checkbox?: HTMLInputElement) => void;
export declare const expectCheckboxToBeUnchecked: (checkbox?: HTMLInputElement) => void;
export declare const expectCheckboxToHaveValue: (value: boolean) => void;
export declare const expectCheckboxToHaveId: (id: string) => void;
export declare const expectCheckboxToHaveName: (name: string) => void;
//# sourceMappingURL=test-utils.d.ts.map