import FeatheryClient from '../../utils/featheryClient';
declare function isHrefMagicLink(): boolean;
declare function inferLoginOnLoad(featheryClient: FeatheryClient): Promise<any> | undefined;
declare function isThereAnExistingSession(): boolean;
declare function inferAuthLogout(): Promise<void>;
declare function sendSms(phoneNum: string, featheryClient: any): any;
declare function verifySMSOTP(params: {
    fieldVal: string;
    featheryClient: any;
}): Promise<any>;
declare function sendMagicLink(email: string): any;
declare function oauthRedirect(oauthType: string, client?: any): Promise<any> | undefined;
declare function initializeAuthClientListeners(): void;
/**
 * This function fires when the idle timer goes off. It either extends the auth
 * session or performs logout actions
 */
declare function idleTimerAction(hasAuthed: boolean, logoutActions: () => void): Promise<void>;
declare const _default: {
    isHrefMagicLink: typeof isHrefMagicLink;
    inferLoginOnLoad: typeof inferLoginOnLoad;
    isThereAnExistingSession: typeof isThereAnExistingSession;
    inferAuthLogout: typeof inferAuthLogout;
    sendSms: typeof sendSms;
    verifySMSOTP: typeof verifySMSOTP;
    sendMagicLink: typeof sendMagicLink;
    oauthRedirect: typeof oauthRedirect;
    initializeAuthClientListeners: typeof initializeAuthClientListeners;
    idleTimerAction: typeof idleTimerAction;
};
export default _default;
//# sourceMappingURL=AuthIntegrationInterface.d.ts.map