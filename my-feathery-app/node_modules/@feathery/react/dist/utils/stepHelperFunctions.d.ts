export declare function changeStep(newKey: string, oldKey: string, steps: any, setStepKey: any, navigate: any, client: any, trackHashes?: boolean): boolean;
export declare function getNewStepUrl(stepKey: any): string;
export declare function getPrevStepKey(curStep: any, stepMap: Record<string, string>): string;
export declare const nextStepKey: (nextConditions: any, metadata: any) => any;
export declare const getOrigin: (steps: any) => unknown;
/**
 *
 * @returns Url hash without the #, or '' if decodeURI fails
 */
export declare function getUrlHash(): string;
export declare function setUrlStepHash(navigate: any, steps: any, stepName: string): void;
export declare function getInitialStep({ initialStepId, steps, sessionCurrentStep, formId }: {
    initialStepId: string;
    steps: any;
    sessionCurrentStep?: string;
    formId?: string;
}): any;
export declare function getSavedStepKey(formId: string): string | undefined;
export declare function setSavedStepKey(formId: string, stepKey: string): void;
export declare function isStepTerminal(step: any): boolean;
export declare const getStepDepthMap: (steps: any, hasProgressBar?: boolean) => Record<string, any>;
export declare const recurseProgressDepth: (steps: any, curKey: any) => any[];
//# sourceMappingURL=stepHelperFunctions.d.ts.map